#------------------------------------------------
# UPS:
#------------------------------------------------
- name: "Main UPS: state"
  state_topic: "hw/power/main/state"
  json_attributes_topic: "hw/power/main"
  device:
    manufacturer: "{{ value_json.device_mfr }}"
    model: "{{ value_json.device_model }}"
    name: "Main UPS"
    identifiers: "UPSUS Giganticus"

- name: "Main UPS: load"
  state_topic: "hw/power/main/out_load"
  unit_of_measurement: 'W'
  device_class: power
  # ups reported this as percentage converting based on 2kW nominal
  # also it seems the powerwalker doesn't detect load below 150 watt
  value_template: >-
    {% if int(value) == 0 %}
      150
    {% else %}
      {{ int(value) * 20 }}
    {% endif %}

- name: "Main UPS: battery time left"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: 'h'
  device_class: duration
  # batt_freshness is how fresh the batteries are: 1 is brand new, downto 0.1 of pretty old
  # batt_wattage is the current pack full wattage in W/h
  value_template: >-
    {% set batt_freshness = 1.0 %}
    {% set batt_wattage = 100.0 * 12.0 * 4.0 * 0.8 * batt_freshness %}
    {% set batt_wattprc = batt_wattage / 100.0 %}
    {% if int(value_json.ups_load) == 0 %}
      {% set load = 150 %}
    {% else %}
      {% set load = int(value_json.ups_load) * 20 %}
    {% endif %}
    {% set r=(float(value_json.battery_charge) - 50.0) * batt_wattprc / load %}
    {% if r < 0 %}
      0
    {% else %}
      {{ r|round(1) }}
    {% endif %}
#    {{ (float(value_json.battery_runtime) / 3600.0 * batt_freshness)|round(1) }}

- name: "Main UPS: battery charge"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: '%'
  device_class: battery
  # upsc supplied batt_charge is way out of a real situation, so we computing it based on voltage
  value_template: >-
    {% set pct = (float(value_json.battery_voltage_high) - float(value_json.battery_voltage_low)) / 100.0 %}
    {{ int((float(value_json.battery_voltage) - float(value_json.battery_voltage_low)) / pct) }}

- name: "Main UPS: battery voltage"
  state_topic: "hw/power/main/batt_voltage"
  unit_of_measurement: 'V'
  device_class: battery

- name: "Main UPS: input voltage"
  state_topic: "hw/power/main/in_volts"
  unit_of_measurement: 'V'
  device_class: voltage

- name: "Main UPS: Voltage mean minute"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: 'V'
  device_class: voltage
  value_template: "{{ value_json.voltage_mean_minute }}"

- name: "Main UPS: Voltage mean hour"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: 'V'
  device_class: voltage
  value_template: "{{ value_json.voltage_mean_hour }}"

- name: "Main UPS: Voltage mean day"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: 'V'
  device_class: voltage
  value_template: "{{ value_json.voltage_mean_day }}"

- name: "Main UPS: Freq mean hour"
  state_topic: "hw/power/main"
  json_attributes_topic: "hw/power/main"
  unit_of_measurement: 'Hz'
  value_template: "{{ value_json.frequency_mean_hour }}"

# UPS: data freshness check
- name: "Main UPS: last update"
  state_topic: "hw/power/main/updated"
  json_attributes_topic: "hw/power/main/updated"
  value_template: "{{ value_json.timestamp }}"
  device_class: timestamp
